Given an "out" string length 4, such as "<<>>", and a word, return a new string where the word is in the middle of the out string, e.g. "<<word>>". Note: use str.substring(i, j) to extract the String starting at index i and going up to but not including index j.


makeOutWord("<<>>", "Yay") → "<<Yay>>"
makeOutWord("<<>>", "WooHoo") → "<<WooHoo>>"
makeOutWord("[[]]", "word") → "[[word]]"

public String makeOutWord(String out, String word) {
  StringBuilder newStr = new StringBuilder();
  
  newStr = newStr.append(out.substring(0,(out.length())/2) + word + out.substring((out.length())/2, out.length()));
  
  return newStr.toString();
}


Expected	Run		
makeOutWord("<<>>", "Yay") → "<<Yay>>"	"<<Yay>>"	OK	
makeOutWord("<<>>", "WooHoo") → "<<WooHoo>>"	"<<WooHoo>>"	OK	
makeOutWord("[[]]", "word") → "[[word]]"	"[[word]]"	OK	
makeOutWord("HHoo", "Hello") → "HHHellooo"	"HHHellooo"	OK	
makeOutWord("abyz", "YAY") → "abYAYyz"	"abYAYyz"	OK	
other tests
OK	

All Correct
