Given a string, return a version without the first 2 chars. Except keep the first char if it is 'a' and keep the second char if it is 'b'. The string may be any length. Harder than it looks.


deFront("Hello") → "llo"
deFront("java") → "va"
deFront("away") → "aay"

public String deFront(String str) { 
  StringBuilder newStr = new StringBuilder();
  
  if(str.substring(0,1).equals("a")) newStr.append("a");
  if(str.substring(1,2).equals("b")) newStr.append("b");
  
  newStr.append(str.substring(2,str.length()));
  
  return newStr.toString();
}

Expected	Run		
deFront("Hello") → "llo"	"llo"	OK	
deFront("java") → "va"	"va"	OK	
deFront("away") → "aay"	"aay"	OK	
deFront("axy") → "ay"	"ay"	OK	
deFront("abc") → "abc"	"abc"	OK	
deFront("xby") → "by"	"by"	OK	
deFront("ab") → "ab"	"ab"	OK	
deFront("ax") → "a"	"a"	OK	
deFront("axb") → "ab"	"ab"	OK	
deFront("aaa") → "aa"	"aa"	OK	
deFront("xbc") → "bc"	"bc"	OK	
deFront("bbb") → "bb"	"bb"	OK	
deFront("bazz") → "zz"	"zz"	OK	
deFront("ba") → ""	""	OK	
deFront("abxyz") → "abxyz"	"abxyz"	OK	
deFront("hi") → ""	""	OK	
deFront("his") → "s"	"s"	OK	
deFront("xz") → ""	""	OK	
deFront("zzz") → "z"	"z"	OK	
other tests
OK	

All Correct
