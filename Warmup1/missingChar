
Given a non-empty string and an int n, return a new string where the char at index n has been removed. The value of n will be a valid index of a char in the original string (i.e. n will be in the range 0..str.length()-1 inclusive).


missingChar("kitten", 1) → "ktten"
missingChar("kitten", 0) → "itten"
missingChar("kitten", 4) → "kittn"

public String missingChar(String str, int n) {
  StringBuilder newStr = new StringBuilder();
  
  for(int i = 0; i < str.length(); i++){
    if(i != n){
      newStr.append(str.charAt(i));
    }
  }
  return newStr.toString();
}

Expected	Run		
missingChar("kitten", 1) → "ktten"	"ktten"	OK	
missingChar("kitten", 0) → "itten"	"itten"	OK	
missingChar("kitten", 4) → "kittn"	"kittn"	OK	
missingChar("Hi", 0) → "i"	"i"	OK	
missingChar("Hi", 1) → "H"	"H"	OK	
missingChar("code", 0) → "ode"	"ode"	OK	
missingChar("code", 1) → "cde"	"cde"	OK	
missingChar("code", 2) → "coe"	"coe"	OK	
missingChar("code", 3) → "cod"	"cod"	OK	
missingChar("chocolate", 8) → "chocolat"	"chocolat"	OK	

All Correct
