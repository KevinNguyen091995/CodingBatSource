Given two ints, each in the range 10..99, return true if there is a digit that appears in both numbers, such as the 2 in 12 and 23.

shareDigit(12, 23) → true
shareDigit(12, 43) → false
shareDigit(12, 44) → false

public boolean shareDigit(int a, int b) {
  int aMod = a % 10;
  int aDiv = a / 10;
  
  int bMod = b % 10;
  int bDiv = b / 10;
  
  return(aMod == bMod || aMod == bDiv || aDiv == bMod || aDiv == bDiv);
}

Expected	Run		
shareDigit(12, 23) → true	true	OK	
shareDigit(12, 43) → false	false	OK	
shareDigit(12, 44) → false	false	OK	
shareDigit(23, 12) → true	true	OK	
shareDigit(23, 39) → true	true	OK	
shareDigit(23, 19) → false	false	OK	
shareDigit(30, 90) → true	true	OK	
shareDigit(30, 91) → false	false	OK	
shareDigit(55, 55) → true	true	OK	
shareDigit(55, 44) → false	false	OK	
other tests
OK	

All Correct
