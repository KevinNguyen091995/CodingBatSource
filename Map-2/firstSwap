We'll say that 2 strings "match" if they are non-empty and their first chars are the same. 
Loop over and then return the given array of non-empty strings as follows: if a string matches an earlier string in the array, swap the 2 strings in the array. 
A particular first char can only cause 1 swap, so once a char has caused a swap, its later swaps are disabled. Using a map, this can be solved making just one pass over the array. 
More difficult than it looks.


firstSwap(["ab", "ac"]) → ["ac", "ab"]
firstSwap(["ax", "bx", "cx", "cy", "by", "ay", "aaa", "azz"]) → ["ay", "by", "cy", "cx", "bx", "ax", "aaa", "azz"]
firstSwap(["ax", "bx", "ay", "by", "ai", "aj", "bx", "by"]) → ["ay", "by", "ax", "bx", "ai", "aj", "bx", "by"]

public String[] firstSwap(String[] strings) {
  HashMap<String, Integer> map = new HashMap<>();
  
  for(int i = 0; i < strings.length; i++){
    String sub = strings[i].substring(0,1);
    
    if(map.containsKey(sub) && map.get(sub) != -1){
      String temp = strings[i];
      strings[i] = strings[map.get(strings[i].substring(0,1))];
      strings[map.get(strings[i].substring(0,1))] = temp;
      map.put(strings[i].substring(0,1), -1);
    }
    
    else if(!map.containsKey(sub)){
      map.put(sub, i);
    }
  }
  
  return strings;
}

Expected	Run		
firstSwap(["ab", "ac"]) → ["ac", "ab"]	["ac", "ab"]	OK	
firstSwap(["ax", "bx", "cx", "cy", "by", "ay", "aaa", "azz"]) → ["ay", "by", "cy", "cx", "bx", "ax", "aaa", "azz"]	["ay", "by", "cy", "cx", "bx", "ax", "aaa", "azz"]	OK	
firstSwap(["ax", "bx", "ay", "by", "ai", "aj", "bx", "by"]) → ["ay", "by", "ax", "bx", "ai", "aj", "bx", "by"]	["ay", "by", "ax", "bx", "ai", "aj", "bx", "by"]	OK	
firstSwap(["ax", "bx", "cx", "ay", "cy", "aaa", "abb"]) → ["ay", "bx", "cy", "ax", "cx", "aaa", "abb"]	["ay", "bx", "cy", "ax", "cx", "aaa", "abb"]	OK	
firstSwap(["easy", "does", "it", "every", "ice", "eaten"]) → ["every", "does", "ice", "easy", "it", "eaten"]	["every", "does", "ice", "easy", "it", "eaten"]	OK	
firstSwap(["list", "of", "words", "swims", "over", "lily", "water", "wait"]) → ["lily", "over", "water", "swims", "of", "list", "words", "wait"]	["lily", "over", "water", "swims", "of", "list", "words", "wait"]	OK	
firstSwap(["4", "8", "15", "16", "23", "42"]) → ["42", "8", "16", "15", "23", "4"]	["42", "8", "16", "15", "23", "4"]	OK	
firstSwap(["aaa"]) → ["aaa"]	["aaa"]	OK	
firstSwap([]) → []	[]	OK	
firstSwap(["a", "b", "c", "xx", "yy", "zz"]) → ["a", "b", "c", "xx", "yy", "zz"]	["a", "b", "c", "xx", "yy", "zz"]	OK	
other tests
OK	

All Correct
