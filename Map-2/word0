Given an array of strings, return a Map<String, Integer> containing a key for every different string in the array, always with the value 0.
For example the string "hello" makes the pair "hello":0. We'll do more complicated counting later, but for this problem the value is simply 0.


word0(["a", "b", "a", "b"]) → {"a": 0, "b": 0}
word0(["a", "b", "a", "c", "b"]) → {"a": 0, "b": 0, "c": 0}
word0(["c", "b", "a"]) → {"a": 0, "b": 0, "c": 0}

public Map<String, Integer> word0(String[] strings) {
  HashMap<String, Integer> newMap = new HashMap<>();
  
  for(int i = 0; i < strings.length; i++){
    newMap.put(strings[i], 0);
  }
  
  return newMap;
}

Expected	Run		
word0(["a", "b", "a", "b"]) → {"a": 0, "b": 0}	{"a": 0, "b": 0}	OK	
word0(["a", "b", "a", "c", "b"]) → {"a": 0, "b": 0, "c": 0}	{"a": 0, "b": 0, "c": 0}	OK	
word0(["c", "b", "a"]) → {"a": 0, "b": 0, "c": 0}	{"a": 0, "b": 0, "c": 0}	OK	
word0(["c", "c", "c", "c"]) → {"c": 0}	{"c": 0}	OK	
word0([]) → {}	{}	OK	
other tests
OK	

All Correct
