Given a string and an int n, return a string made of the first n characters of the string, followed by the first n-1 characters of the string, and so on. 
You may assume that n is between 0 and the length of the string, inclusive (i.e. n >= 0 and n <= str.length()).


repeatFront("Chocolate", 4) → "ChocChoChC"
repeatFront("Chocolate", 3) → "ChoChC"
repeatFront("Ice Cream", 2) → "IcI"

public String repeatFront(String str, int n) {
  StringBuilder newStr = new StringBuilder();
  
  for(int i = 0; i < n; n--){
    newStr.append(str.substring(0,n));
  }
  
  return newStr.toString();
}

Expected	Run		
repeatFront("Chocolate", 4) → "ChocChoChC"	"ChocChoChC"	OK	
repeatFront("Chocolate", 3) → "ChoChC"	"ChoChC"	OK	
repeatFront("Ice Cream", 2) → "IcI"	"IcI"	OK	
repeatFront("Ice Cream", 1) → "I"	"I"	OK	
repeatFront("Ice Cream", 0) → ""	""	OK	
repeatFront("xyz", 3) → "xyzxyx"	"xyzxyx"	OK	
repeatFront("", 0) → ""	""	OK	
repeatFront("Java", 4) → "JavaJavJaJ"	"JavaJavJaJ"	OK	
repeatFront("Java", 1) → "J"	"J"	OK	
other tests
OK	

All Correct
